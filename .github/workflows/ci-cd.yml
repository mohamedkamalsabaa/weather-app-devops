name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd app
        pip install -r requirements-dev.txt
    
    - name: Lint with flake8
      run: |
        cd app
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Test with pytest
      run: |
        cd app
        pytest test_app.py -v --cov=app

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t weather-app:${{ github.sha }} .
    
    - name: Test Docker image
      run: |
        docker run --rm weather-app:${{ github.sha }} python -c "import app; print('App loads successfully')"
    
    - name: Login to Docker Hub
      if: github.event_name == 'push'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push to Docker Hub
      if: github.event_name == 'push'
      run: |
        docker tag weather-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/weather-app:latest
        docker tag weather-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/weather-app:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/weather-app:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/weather-app:${{ github.sha }}
